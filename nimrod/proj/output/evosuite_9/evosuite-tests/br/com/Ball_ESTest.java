/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 03 17:21:20 GMT 2019
 */

package br.com;

import org.junit.Test;
import static org.junit.Assert.*;
import br.com.Ball;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Ball_ESTest extends Ball_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Ball ball0 = new Ball(0L, (-1), (-1), "", "", "", "", ", topicWildcardPattern=", ", topicWildcardPattern=", ", topicWildcardPattern=", "[f.KaB_yk~so", ", topicWildcardPattern=");
      String string0 = ball0.finalString();
      assertEquals("KafkaSpoutConfig{kafkaProps=, topicWildcardPattern=, keyDeserializer=, topicWildcardPattern=, valueDeserializer=, topicWildcardPattern=, pollTimeoutMs=, topicWildcardPattern=, offsetCommitPeriodMs=0, maxUncommittedOffsets=-1, firstPollOffsetStrategy=, kafkaSpoutStreams=, tuplesBuilder=, retryService=, topics=[f.KaB_yk~so, topicWildcardPattern=, topicWildcardPattern=}", string0); // (Primitive) Original Value: KafkaSpoutConfig{kafkaProps=, topicWildcardPattern=, keyDeserializer=, topicWildcardPattern=, valueDeserializer=, topicWildcardPattern=, pollTimeoutMs=, topicWildcardPattern=, offsetCommitPeriodMs=0, maxUncommittedOffsets=-1, firstPollOffsetStrategy=, kafkaSpoutStreams=, tuplesBuilder=, retryService=, topics=[f.KaB_yk~so, topicWildcardPattern=, topicWildcardPattern=} | Regression Value: KafkaSpoutConfig{kafkaProps=, topicWildcardPattern=, keyDeserializer=, topicWildcardPattern=, valueDeserializer=, topicWildcardPattern=, pollTimeoutMs=, topicWildcardPattern=, offsetCommitPeriodMs=0, maxRetries=-1, maxUncommittedOffsets=-1, firstPollOffsetStrategy=, kafkaSpoutStreams=, tuplesBuilder=, retryService=, topics=[f.KaB_yk~so, topicWildcardPattern=, topicWildcardPattern=}
  }
}
